---
import { Table as OuterbaseTable } from '../components/table'

// local, fallback data
import spaceballs from '../lib/sample-data.json'

// api, real data
import dbRowsForSource from '../lib/rows-for-source-id';
let data
try {
    // attempt to use the Movies DB
    data = await dbRowsForSource('placeholder', import.meta.env.PUBLIC_AUTH_TOKEN)
} catch (err) {
    // fallback to Spaceballs
    console.error(err)
    data = {items: spaceballs}
}
---
<html lang="en" class="h-full">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <style>
            :root {
                /* consider this as a placeholder for a theme */
                /* --primary-color: white; */
                /* --secondary-color: gray; */
            }

        </style>
        <script>
            /* themes may also be set dynamically/programatically */
            // document.documentElement.style.setProperty("--success-color", "lime");
        </script>
    </head>

    <body class="vh-full">
        <main class="m-12 pb-24">
            <h1 class="font-bold text-xl">Static</h1>
            <!-- @ts-ignore Astro doesn't seem to understand what `data` is.. -->
            <OuterbaseTable client:only="lit" data={data} auth-token={import.meta.env.PUBLIC_AUTH_TOKEN}></OuterbaseTable>
            
            <h1 class="font-bold text-xl mt-8">SSR w/ Hydration</h1>
            <!-- @ts-ignore Astro doesn't seem to understand what `data` is.. -->
            <OuterbaseTable client:load data={data} auth-token={import.meta.env.PUBLIC_AUTH_TOKEN}></OuterbaseTable>
            
            <h1 class="font-bold text-xl mt-8">SSR w/o Hydration</h1>
            <!-- @ts-ignore Astro doesn't seem to understand what `data` is.. -->
            <OuterbaseTable data={data} auth-token={import.meta.env.PUBLIC_AUTH_TOKEN}></OuterbaseTable>
        </main>
    </body>
</html>
